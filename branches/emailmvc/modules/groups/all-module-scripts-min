GO.groups.MainPanel=function(a){if(!a){a={}}this.store=new GO.data.JsonStore({url:GO.url("groups/group/grid"),baseParams:{},root:"results",id:"id",totalProperty:"total",fields:["id","name","user_id","user_name","acl_id","admin_only"],remoteSort:true});var b=new Ext.grid.ColumnModel({defaults:{sortable:true},columns:[{header:GO.groups.lang.groups,dataIndex:"name",width:300},{header:GO.groups.lang.owner,dataIndex:"user_name"},{header:GO.groups.lang.adminOnly,dataIndex:"admin_only",renderer:function(d){return(d==1)?GO.lang.cmdYes:GO.lang.cmdNo}}]});this.searchField=new GO.form.SearchField({store:this.store,width:320});var c=new Ext.Toolbar({cls:"go-head-tb",items:[{iconCls:"btn-add",text:GO.lang.cmdAdd,cls:"x-btn-text-icon",handler:function(){this.showGroupDialog(0)},scope:this,disabled:!GO.settings.modules.groups.write_permission},{iconCls:"btn-delete",text:GO.lang.cmdDelete,cls:"x-btn-text-icon",handler:function(){this.deleteSelected()},scope:this,disabled:!GO.settings.modules.groups.write_permission},"-",GO.lang.strSearch+":",this.searchField]});a.layout="fit";a.id="groups-grid-overview-groups";a.cm=b;a.sm=new Ext.grid.RowSelectionModel({singleSelect:false});a.tbar=c;a.paging=true;a.noDelete=!GO.settings.modules.groups.write_permission;a.viewConfig={autoFill:true,forceFit:true};GO.groups.MainPanel.superclass.constructor.call(this,a)};Ext.extend(GO.groups.MainPanel,GO.grid.GridPanel,{afterRender:function(){GO.groups.MainPanel.superclass.afterRender.call(this);this.on("rowdblclick",this.rowDoubleClick,this);this.store.load()},rowDoubleClick:function(a){this.showGroupDialog(a.selModel.selections.items[0].data.id)},showGroupDialog:function(a){if(!this.groupDialog){this.groupDialog=new GO.groups.GroupDialog();this.groupDialog.on("save",function(b,c){this.store.load()},this)}this.groupDialog.show(a)}});GO.moduleManager.addModule("groups",GO.groups.MainPanel,{title:GO.groups.lang.groups,iconCls:"go-tab-icon-groups",admin:true});GO.groups.GroupDialog=Ext.extend(GO.dialog.TabbedFormDialog,{initComponent:function(){Ext.apply(this,{goDialogId:"group",title:GO.groups.lang.group,formControllerUrl:GO.url("groups/group")});GO.groups.GroupDialog.superclass.initComponent.call(this)},beforeLoad:function(b,a){this.userGrid.setGroupId(b);if(b<=0){this.userGrid.setDisabled(true)}else{this.userGrid.setDisabled(false)}},buildForm:function(){this.propertiesPanel=new Ext.Panel({region:"north",height:35,border:false,cls:"go-form-panel",layout:"form",items:[{xtype:"textfield",name:"name",width:300,anchor:"100%",maxLength:100,allowBlank:false,fieldLabel:GO.lang.strName}]});if(GO.settings.has_admin_permission){this.adminOnlyCheckBox=new Ext.ux.form.XCheckbox({name:"admin_only",checked:false,boxLabel:GO.groups.lang.adminOnlyLabel,hideLabel:true});this.propertiesPanel.height=60;this.propertiesPanel.add(this.adminOnlyCheckBox)}this.userGrid=new GO.groups.UsersGrid({region:"center"});this.borderPanel=new Ext.Panel({layout:"border",title:GO.lang.strProperties,items:[this.propertiesPanel,this.userGrid]});this.permissionsPanel=new GO.grid.PermissionsPanel({title:GO.groups.lang.managePermissions,hideLevel:true});this.addPanel(this.borderPanel);this.addPanel(this.permissionsPanel)}});GO.groups.UsersGrid=Ext.extend(GO.grid.GridPanel,{changed:false,initComponent:function(){this.userStore=new GO.data.JsonStore({url:GO.url("groups/group/getUsers"),baseParams:{id:0},root:"results",id:"id",fields:["id","user_id","name","username","email"],remoteSort:true});Ext.apply(this,{standardTbar:true,store:this.userStore,border:false,paging:true,view:new Ext.grid.GridView({autoFill:true,forceFit:true,emptyText:GO.lang.strNoItems}),cm:new Ext.grid.ColumnModel({defaults:{sortable:true},columns:[{header:GO.lang.strName,dataIndex:"name"},{header:GO.lang.strUsername,dataIndex:"username"},{header:GO.lang.strEmail,dataIndex:"email"}]})});GO.groups.UsersGrid.superclass.initComponent.call(this)},setGroupId:function(a){this.userStore.baseParams.id=a;this.userStore.load()},btnAdd:function(){if(!this.addUsersDialog){this.addUsersDialog=new GO.dialog.SelectUsers({handler:function(a){if(a.selModel.selections.keys.length>0){this.userStore.baseParams.add_users=Ext.encode(a.selModel.selections.keys);this.userStore.load();delete this.userStore.baseParams.add_users}},scope:this})}this.addUsersDialog.show()},deleteSelected:function(){GO.groups.UsersGrid.superclass.deleteSelected.call(this);this.changed=true}});