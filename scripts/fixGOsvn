#!/bin/bash

#
# Copyright Carel Fellinger 2006
# Author: Carel Fellinger
# Version: 1.0 Release date: 11 dec 2006
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.

set -e
#set -v
#set -x


sfHost=group-office.svn.sourceforge.net
sfGOsvn=https://$sfHost/svnroot/group-office/
localGOsvn=file://`pwd`/localGOsvn

# either work on local copy ($localGOsvn) or on the real thing ($sfGOsvn)
#repo=$localGOsvn
repo=$sfGOsvn

# uncomment next line to test incremental fixes on localGOsvn
#incrementalLocalGOsvn=yes

BinaryPatterns="
    -name *.img -or -name *.jpg -or -name *.jar -or
    -name *.gif -or -name *.png -or -name *.ico -or
    -name *.au -or -name *.wav -or -name *.swf -or -name *.pdf -or
    -name libdav.so -or -name calendar-hr.js -or -name macAddr
    "
ExecutablePatterns="
    -name *.sh -or -name macAddr -or
    -name pipeing -or -name make_language_pack -or
    -name fixGOsvn
    "
pruneSVN="-name .svn -prune -not -name .svn"


if [ "x$repo" != "x$sfGOsvn" ] ; then
   echo '
       ===========================================
       Get up-to-date with current sourceforge SVN
       ===========================================
   '

   echo "=== rsync sfGOsvn with sourceforge.net"
   # let op trailing / after source dir!!
   rsync -av --delete  $sfHost::svn/group-office/  sfGOsvn


   echo '
       ==============================
       Make local copy to fiddle with
       ==============================
   '

   if [ "x$incrementalLocalGOsvn" != "xyes" ] ; then
      echo "=== rsync local copy localGOsvn"
      # let op trailing / after source dir!!
      rsync -av --delete sfGOsvn/  localGOsvn
   fi
fi



echo "
    =======================
    Check repository layout
    =======================
"
if ! svn ls $repo | grep -q branches ; then
   echo "=== add standard branches directory"
   svn mkdir $repo/branches -m '+ /branches: adjust to standard repo layout'
fi

if ! svn ls $repo/trunk | grep -q www ; then
   echo "=== split trunk into scripts and www subdirs"
   svn mv $repo/trunk $repo/www -m 'prepare trunk to trunk/www rename'
   svn mkdir $repo/trunk -m 'second step in trunk to trunk/www rename'
   svn mv $repo/www $repo/trunk/www -m 'finalize trunk to trunk/www rename'
   svn mkdir $repo/trunk/scripts -m '+ scripts: non-web-executable scripts'
   #TODO? fix tag 2.16-5 ?
   echo "=== fill with initial version of fixGOsvn script"
   zandbak=/tmp/zandbak$$
   svn co $repo/trunk/scripts $zandbak
   cp $0 $zandbak/fixGOsvn
   svn add $zandbak/fixGOsvn
   svn propset svn:executable '*' $zandbak/fixGOsvn
   svn propset svn:mime-type text/x-sh $zandbak/fixGOsvn
   svn propset svn:eol-style native $zandbak/fixGOsvn
   svn ci $zandbak -m '+ fixGOsvn:  normalize and fix svn archive'
   rm -rf $zandbak
fi


echo "
    ===================
    Check local zandbak
    ===================
"
zandbak=zandbak
if [ -d $zandbak ] ; then
   if [ "$(svn info $zandbak | grep URL)" == "URL: $localGOsvn/trunk" ] ; then
      echo "=== get rid of zandbak of ambiguous origin"
      rm -rf $zandbak
   fi
fi

if [ -d $zandbak ] ; then
   echo "=== update local zandbak"
   svn update $zandbak
else
   echo "=== create local zandbak"
   svn co -q $repo/trunk  $zandbak
fi


if ! diff -q $zandbak/scripts/fixGOsvn $0 ; then
   echo "=== update fixGOsvn script"
   cp $0 $zandbak/scripts/fixGOsvn
   svn ci $zandbak -m 'fixGOsvn:\n  * updated to newer version'
fi



echo "
    ======================
    Apply Some known fixes
    ======================
"


# check filenames:
#    * Windows: con, aux, com, com1 - com9, prn, lpt1 - lpt3, nul, a: - z:, clock$, _svn
#    * All: .svn   and no spaces

# in het archief staan zo'n 15 (14 in de Atic) Thumbs.db files
echo "=== remove thumbnails"
find $zandbak -name 'Thumbs.db' -exec svn delete  '{}' ';'
find $zandbak -name '.xvpics' -exec svn delete  '{}' ';'
svn ci $zandbak -m 'removed spurious thumbnail files'

# in het archief staan zo'n 4 backup files (in cvs, in svn 0)
echo "=== remove backup files"
find $zandbak -name '*~' -exec svn delete  '{}' ';'
svn ci $zandbak -m 'removed spurious backup files'

# in het archief zitten zo'n 3852 executable non-executables
echo "=== foute exec vlaggen weghalen"
find zandbak $pruneSVN -or -type f -not \( $ExecutablePatterns \) \
    -exec svn -q propdel svn:executable '{}' ';'
svn ci $zandbak -m 'get rid of spurious executable flags'

echo "=== vergeten exec vlaggen zetten"
find zandbak $pruneSVN -or -type f \( $ExecutablePatterns \) \
    -exec svn -q propset svn:executable '*' '{}' ';'
svn ci $zandbak -m 'add forgotten executable flags'



# in het archief staan zo'n 1243 files met 'foute' CRLF
# *.eps en *.pdf files zijn min of meer tekst files, wel/niet CRLF fix?!
echo "=== mixed eol in text files normaliseren"
find zandbak/www $pruneSVN -or -type f  -not \( $BinaryPatterns \) \
    -exec python -c "path = '{}'
import re, sys
data=open(path, 'rb').read()
rr,rn = data.count('\r\r'), data.count('\r\n')
r,n = data.count('\r') - rn - rr, data.count('\n') - rn
if not r or r==n==rn: # pure unix or pure dos
    raise SystemExit
if r != rn:
    print >>sys.stderr, 'WARNING: %s ugly mix %s (%s) %s %s' % (
        path, r, data.count('\r\r'), rn, n)
if rn < n-rn: # unix like
    print 'UNIX like', r,n,rn, path
    data = re.sub('\r+\n', '\n', data)
else: # dos like
    print 'DOS like', r,n,rn,path
    data = re.sub('\r*\n|\r', '\r\n', data)
open(path, 'wb').write(data)
"  ';'
svn ci $zandbak -m 'normalize eol (no more mixing of CR and CRLF)'


echo "=== switch to native eol-style"
find zandbak/www $pruneSVN -or -type f  -not \( $BinaryPatterns \) \
    -exec svn -q propset svn:eol-style native '{}' ';'
svn ci $zandbak -m 'switch to native eol-style for all text files'

exit

# slechts 531 van de 2988 binaries staan als zodanig in het archief
echo "=== markeer binary files als zodanig"
find zandbak $pruneSVN -or -type f \( $BinaryPatterns \) \
    -exec svn propset svn:executable '*'  '{}' ';'
svn ci $zandbak -m 'fixed svn:executable for all executable files'



# na ?> mogen geen lege regels meer komen in php files
